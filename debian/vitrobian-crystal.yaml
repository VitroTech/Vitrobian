{{- $image := or .image "vitrobian.img" -}}

architecture: armhf

actions:
  - action: download
    description: Download pre-build stuff
    url: https://s3-eu-west-1.amazonaws.com/prod-vitrobian-components/vitro-crystal-boot-files_0.1.0.tar.gz
    unpack: true     # Unpack downloaded file
    name: downloaded-boot-files # name for usage directory with unpacked content in other actions

  - action: debootstrap
    suite: "stretch"
    components:
      - main
    mirror: https://deb.debian.org/debian
    variant: minbase

  - action: apt
    description: Install base packages
    packages: [ sudo, openssh-server, adduser, systemd-sysv ]

  - action: apt
    description: Install extended packages
    packages: [ locales, ssh, less, fbset, psmisc, strace, ed, ncdu, crda, console-setup, keyboard-configuration, debconf-utils, parted, unzip, build-essential, manpages-dev, python, bash-completion, gdb, pkg-config, avahi-daemon, hardlink, ca-certificates, curl, nfs-common, usbutils, dosfstools, apt-listchanges, usb-modeswitch, apt-transport-https, libmtp-runtime, rsync, htop, nano ]

  - action: apt
    description: Install network packages
    packages: [ wpasupplicant, wireless-tools, dhcpcd5, net-tools, rfkill, iputils-ping, wget ]

  - action: apt
    description: Install packages needed to run greengrass core
    packages: [ sqlite3 ]

  - action: run
    description: User setup
    chroot: true
    script: setup-user.sh

  - action: run
    description: Hostname setup
    chroot: true
    command: echo crystal > /etc/hostname

  - action: overlay
    description: Network setup
    source: networkd

  - action: overlay
    description: Install boot files to /boot
    origin: downloaded-boot-files
    source: vitro-crystal-boot-files

  - action: run
    description: Network setup
    chroot: true
    script: setup-networking.sh

  - action: apt
    description: Install Linux and U-Boot packages
    recommends: false
    packages:
      - linux-image-armmp
      - u-boot-imx

  - action: image-partition
    description: Create partitioned image
    imagename: {{ $image }}
    imagesize: 4GB
    partitiontype: msdos
    mountpoints:
      - mountpoint: /
        partition: root
      - mountpoint: /boot/u-boot
        partition: boot
        options: [ x-systemd.automount ]
    partitions:
      - name: boot
        fs: fat32
        start: 4MB
        end: 18MB
        flags: [ boot ]
      - name: root
        fs: ext4
        start: 18MB
        end: 100%

  - action: run
    description: Set alias for /sbin/ifconfig
    chroot: true
    command: echo "alias ifconfig='/sbin/ifconfig'" >> /home/user/.bashrc

  - action: run
    description: Enable hardlink and softlink protection
    chroot: true
    command:
      - echo "fs.protected_hardlinks = 1" >> /etc/sysctl.d/99-sysctl.conf
      - echo "fs.protected_symlinks = 1" >> /etc/sysctl.d/99-sysctl.conf

  - action: raw
    description: Install U-Boot SPL into image
    origin: downloaded-boot-files # this is the component name as specified in the download action
    source: vitro-crystal-boot-files/boot/u-boot/SPL # this is the directory structure in downloaded component
    offset: {{ sector 2 }} # bs=1K seek=1

  - action: raw
    description: Install U-Boot img into image
    origin: downloaded-boot-files
    source: vitro-crystal-boot-files/boot/u-boot/u-boot.img
    offset: {{ sector 138 }} # bs=1K seek=69

  - action: filesystem-deploy
    description: Deploy filesystem onto image

  - action: run
    description: Create bmap (block map) for image
    postprocess: true
    command: bmaptool create {{ $image }} > {{ $image }}.img.bmap

  - action: run
    description: Compress image
    postprocess: true
    command: gzip -f {{ $image }}
